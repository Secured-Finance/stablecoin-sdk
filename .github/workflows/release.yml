name: Release SDK & UI

env:
  CI: true
  FORCE_COLOR: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MACHINE_USER_APP_ID }}
          private_key: ${{ secrets.MACHINE_USER_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
        env:
          # Workaround for https://github.com/actions/setup-node/issues/317
          FORCE_COLOR: 0

      - name: "Setup for git"
        run: |
          git config user.name "SF Machine User[bot]"
          git config user.email "${{ secrets.MACHINE_USER_APP_ID }}+sf-machine-user[bot]@users.noreply.github.com"

      - name: Install Dependencies
        run: npm ci
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npm run build

      - name: Test SDK & UI
        run: npm run test

      # - name: Test SDK integration against live contracts
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   run: npm run test-live

      - name: Release SDK on NPM
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

      # - name: Login to Docker Hub
      #   uses: azure/docker-login@v1
      #   if: ${{ github.event_name == 'push' }}
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # - name: Release dev-frontend on Docker Hub
      #   if: ${{ github.event_name == 'push' }}
      #   run: |
      #     docker-compose build
      #     docker-compose push
      #   working-directory: ./packages/dev-frontend
      #   env:
      #     TAG: ${{ fromJSON('{ "refs/heads/main":"latest", "refs/heads/main":"next" }')[github.ref] }}
